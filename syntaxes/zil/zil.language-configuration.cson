comments:
    # symbol used for single line comment. Remove this entry if your language does not support line comments
    # lineComment: "#",
    # symbols used for start and end a block comment. Remove this entry if your language does not support block comments
    blockComment: [ ";[\"", "\"]" ]

# symbols used as brackets
brackets: [
    ["{", "}"],
    ["[", "]"],
    ["(", ")"],
    ["<", ">"]
]

# symbols that are auto closed when typing
autoClosingPairs: [
    ["{", "}"],
    # ["![", " !]"],       # has no effect when "[" and "]" are included
    ["[", "]"],
    ["(", ")"],
    ["<", ">"],
    { open: "\"", close: "\"", notIn: ["string"] }
]

# symbols that that can be used to surround a selection
surroundingPairs: [
    ["{", "}"],
    ["[", "]"],
    ["(", ")"],
    ["<", ">"],
    ["\"", "\""]
]

folding:
    offSide: true

wordPattern:
    '''(?x)
    (?:
        \\\\.
    |   [^!\\. \\t-\\r,#\\':;%\\(\\)\\[\\]<>\\{\\}"]
    )
    (?:
        \\\\.
    |   [^ \\t-\\r,#\\':;%\\(\\)\\[\\]<>\\{\\}"]
    )*
    '''

indentationRules:
    increaseIndentPattern: '''(?x)
        (?'plain'
            (?> \\\\ . | [^<>()\\[\\]{}"\\\\] )+
        ){0}

        (?'bracketed'
            < \\g'any'  >
            |
            \\( \\g'any' \\)
            |
            \\[ \\g'any' \\]
            |
            \\{ \\g'any' \\}
        ){0}

        (?'string'
            " (?> \\\\ . | [^"\\\\] )* "
        ){0}

        (?'any'
            (?> \\g'plain' | \\g'bracketed' | \\g'string' )*
        ){0}

        # match a line with extra open brackets
        ^ \\g'any' (?> [<(\\[{] \\g'any' )+ $
        '''
    decreaseIndentPattern: '''(?x)
        (?'plain'
            (?> \\\\ . | [^<>()\\[\\]{}"\\\\] )+
        ){0}

        (?'bracketed'
            < \\g'any'  >
            |
            \\( \\g'any' \\)
            |
            \\[ \\g'any' \\]
            |
            \\{ \\g'any' \\}
        ){0}

        (?'string'
            " (?> \\\\ . | [^"\\\\] )* "
        ){0}

        (?'any'
            (?> \\g'plain' | \\g'bracketed' | \\g'string' )*
        ){0}

        # match a line with extra close brackets
        ^ \\g'any' (?> [>)\\]}] \\g'any' )+ $
        '''